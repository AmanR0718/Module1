version: "3.9"

services:
  # ============================================
  # MONGODB DATABASE
  # ============================================
  mongodb:
    image: mongo:7.0
    container_name: zambian_farmer_mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD:-Admin123}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE:-zambian_farmers}
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d
    networks:
      - farmer_network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # ============================================
  # FASTAPI BACKEND (Python + Uvicorn)
  # ============================================
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: zambian_farmer_backend
    restart: unless-stopped
    environment:
      MONGODB_URL: mongodb://${MONGO_INITDB_ROOT_USERNAME:-admin}:${MONGO_INITDB_ROOT_PASSWORD:-Admin123}@mongodb:27017/
      MONGODB_DB_NAME: ${MONGO_INITDB_DATABASE:-zambian_farmers}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY:-tt1eTajVweALvwxHqBGwVjNqScCjT4NoSd1-4q3edLk}
      JWT_ALGORITHM: ${JWT_ALGORITHM:-HS256}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${ACCESS_TOKEN_EXPIRE_MINUTES:-30}
      AES_ENCRYPTION_KEY: "${AES_ENCRYPTION_KEY:-315741653158b40e3608bbe97704bb22}"
      DEBUG: ${DEBUG:-True}
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS:-["http://localhost:3000","http://localhost:19006","http://localhost:8000"]}
      REDIS_URL: redis://redis:6379/0
    ports:
      - "8000:8000"
    volumes:
      - ./backend/uploads:/app/uploads
      - ./backend/app:/app/app
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - farmer_network
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/docs || exit 1"]
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 20s

  # ============================================
  # NGINX REVERSE PROXY
  # ============================================
  nginx:
    image: nginx:alpine
    container_name: zambian_farmer_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./backend/uploads:/usr/share/nginx/html/uploads:ro
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - farmer_network
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 20s

  # ============================================
  # REDIS CACHE
  # ============================================
  redis:
    image: redis:alpine
    container_name: zambian_farmer_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - farmer_network
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

# ============================================
# NAMED VOLUMES
# ============================================
volumes:
  mongodb_data:
  redis_data:

# ============================================
# NETWORKS
# ============================================
networks:
  farmer_network:
    driver: bridge
